# -*- coding: utf-8 -*-
from datetime import datetime
from time import sleep

import jenkinsapi
from jenkinsapi.jenkins import Jenkins
from jenkinsapi.utils.crumb_requester import CrumbRequester

from Logger import logger
from config_loader import get_jenkins_cfg as cfg
from notification_bot import send_build_info

BASE_URL = cfg()["url"]
CRUMB = CrumbRequester(baseurl=BASE_URL)
JENKINS = Jenkins(BASE_URL, requester=CRUMB)
CHECK_BUILD_LIST = dict()
TRACKING_JOBS = cfg()['jobs']
TIMEOUT = 10


def jenkins_checker_thread():
    """–§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã—Ö –±–∏–ª–¥–æ–≤"""
    while True:
        logger.info('Jenkins checker run at %s', datetime.now())
        global JENKINS
        # –ü—Ä–æ—Ö–æ–¥–∏–º—Å—è –ø–æ –¥–∂–æ–±–∞–º, –¥–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ –±–∏–ª–¥—ã –≤ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã–µ
        for job in TRACKING_JOBS:
            try:
                last_build = JENKINS.get_job(job).get_last_build()
                last_num = last_build.get_number()
            except jenkinsapi.custom_exceptions.NoBuildData:
                last_build = None
                last_num = 0
            except ConnectionError as error:
                logger.error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –±–∏–ª–¥–∞ —Å –¥–∂–µ–Ω–∫–∏–Ω—Å–∞.\n'
                             '–û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º–∞—è –¥–∂–æ–±–∞: %s\n'
                             '–¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏: %s', job, error)
                continue
            # –ï—Å–ª–∏ –Ω–µ –±—ã–ª–æ –¥–æ —ç—Ç–æ–≥–æ –±–∏–ª–¥–æ–≤ - –æ–±–Ω–æ–≤–ª—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π –±–∏–ª–¥
            if TRACKING_JOBS[job] == 0:
                TRACKING_JOBS[job] = last_num
                logger.info('–û–±–Ω–æ–≤–ª—ë–Ω –ø–æ—Å–ª–µ–¥–Ω–∏–π –±–∏–ª–¥ –¥–ª—è –¥–∂–æ–±—ã %s', job)
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π –±–∏–ª–¥, –µ—Å–ª–∏ –æ–Ω –±–æ–ª—å—à–µ —Ç–µ–∫—É—â–µ–≥–æ - –∑–Ω–∞—á–∏—Ç –Ω–æ–≤—ã–π
            if TRACKING_JOBS[job] < last_num:
                logger.info('–û–±–Ω–∞—Ä—É–∂–µ–Ω –Ω–æ–≤—ã–π –±–∏–ª–¥ %s –¥–∂–æ–±—ã %s, '
                            '–¥–æ–±–∞–≤–ª–µ–Ω –≤ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã–µ',
                            last_num, job)
                # –ó–∞–¥–∞—ë–º –æ—Å–æ–±—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è
                tracking_job = str(job) + '.' + str(last_num)
                # –°—Ç–∞–≤–∏–º –ø—Ä–∏–∑–Ω–∞–∫, —á—Ç–æ –æ–Ω –µ—â—ë –Ω–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω
                CHECK_BUILD_LIST[tracking_job] = 'NOT_READY'
                TRACKING_JOBS[job] = last_num
                # –ì–æ—Ç–æ–≤–∏–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ —Ç–µ–ª–µ–≥—Ä–∞–º–º
                job_in_url = job.replace('/', '/job/')
                job_in_telegram = job.replace('_', '\_').replace('/', '\/')
                job_for_tracking = job + '.' + str(last_num)
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–æ–≤–æ–º –±–∏–ª–¥–µ –≤ —Ç–µ–ª–µ–≥—Ä–∞–º–º
                send_build_info('*–ó–∞–ø—É—â–µ–Ω –Ω–æ–≤—ã–π –±–∏–ª–¥ '
                                f'{last_num}\!*\n\n'
                                f'–°—Å—ã–ª–∫–∞ –Ω–∞ –¥–∂–æ–±—É\: {BASE_URL}/job/'
                                f'{job_in_url}/{last_num}\n'
                                f'–î–∂–æ–±–∞\: {job_in_telegram}',
                                job_for_tracking)
        if len(CHECK_BUILD_LIST) == 0:
            logger.info('–ù–µ—Ç –±–∏–ª–¥–æ–≤ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è')
        else:
            builds_str = ''
            # –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –±–∏–ª–¥–∞ –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏–∑ —Å–ø–∏—Å–∫–∞
            for job in CHECK_BUILD_LIST:
                build = str(job).split(".")[1]
                builds_str += f'{build} '
            logger.info('–ï—Å—Ç—å –±–∏–ª–¥—ã –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è: %s', builds_str)
            untracking_builds = dict()
            # –ü—Ä–æ—Ö–æ–¥–∏–º—Å—è –ø–æ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã–º –±–∏–ª–¥–∞–º
            for tracking_job in CHECK_BUILD_LIST:
                # –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ –±–∏–ª–¥—É
                job = str(tracking_job).split(".")[0]
                build = str(tracking_job).split(".")[1]
                logger.info('–ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∏–ª–¥ %s –¥–∂–æ–±—ã %s', build, job)
                build_obj = JENKINS.get_job(job).get_build(int(build))
                status = build_obj.get_status()
                logger.info('–ë–∏–ª–¥ ‚Ññ%s. –°—Ç–∞—Ç—É—Å: %s',
                            build,
                            status)
                # –°—Ç–∞—Ç—É—Å –º–æ–∂–µ—Ç –±—ã—Ç—å —Ä–∞–∑–Ω—ã–º,
                # –µ—Å–ª–∏ –æ–Ω None - –∑–Ω–∞—á–∏—Ç –±–∏–ª–¥ –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ
                if status is not None:
                    # –ï—Å–ª–∏ —Å—Ç–∞—Ç—É—Å –Ω–µ None - –∑–Ω–∞—á–∏—Ç –æ–Ω –∑–∞–∫–æ–Ω—á–∏–ª—Å—è, –Ω–æ –¥–∞—ë–º 1 —à–∞–≥
                    # –Ω–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞. –û—Ç—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Å–æ 2-–≥–æ —Ä–∞–∑–∞, –º–æ–∂–µ—Ç
                    # –∏–∑–º–µ–Ω–∏—Ç—å—Å—è —Å SUCCESS –Ω–∞ –ª—é–±–æ–µ –¥—Ä—É–≥–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ,
                    # –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç—å Jenkins
                    if CHECK_BUILD_LIST[tracking_job] == 'NOT_READY':
                        CHECK_BUILD_LIST[tracking_job] = 'READY'
                    # –ï—Å–ª–∏ –±–∏–ª–¥ –≤ —Å—Ç–∞—Ç—É—Å–µ READY, –º–æ–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å –Ω–∞—Å—Ç–æ—è—â–∏–π —Å—Ç–∞—Ç—É—Å
                    elif CHECK_BUILD_LIST[tracking_job] == 'READY':
                        result_build = 'üü¶ –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'
                        if status == 'SUCCESS':
                            result_build = 'üü© –£—Å–ø–µ—à–Ω–æ'
                        elif status == 'ABORTED':
                            result_build = 'üü™ –û—Ç–º–µ–Ω—ë–Ω'
                        elif status == 'FAILURE':
                            result_build = 'üü• –ü—Ä–æ–≤–∞–ª–µ–Ω–∞ —Å–±–æ—Ä–∫–∞ –±–∏–ª–¥–∞'
                        elif status == 'UNSTABLE':
                            result_build = 'üü® –ï—Å—Ç—å –æ—à–∏–±–∫–∏ –≤ —Ç–µ—Å—Ç–∞—Ö'
                        # –ï—Å–ª–∏ –±–∏–ª–¥ –∑–∞–≤–µ—Ä—à—ë–Ω - –¥–æ–±–∞–≤–ª—è–µ–º –µ–≥–æ –≤ untracking_builds
                        untracking_builds[job] = build
                        # –ü—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –±–∏–ª–¥–∞
                        try:
                            duration = str(build_obj.get_duration()).split(
                                '.', maxsplit=1)[0].replace(':', '\:')
                        except Exception as e:
                            duration = '\?'
                            logger.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–∑–±–æ—Ä–µ –æ—Ç—á—ë—Ç–∞\n%s', e)
                        # –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ç–µ–ª–µ–≥—Ä–∞–º–º
                        job_in_url = tracking_job.split('.')[0] \
                            .replace('/', '/job/')
                        job_in_telegram = job.replace('_', '\_').replace('/',
                                                                         '\/')
                        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –±–∏–ª–¥–∞
                        send_build_info(
                            f'*–°–±–æ—Ä–∫–∞ –±–∏–ª–¥–∞ {build} –∑–∞–≤–µ—Ä—à–µ–Ω–∞\!*\n\n'
                            f'–î–∂–æ–±–∞\: {job_in_telegram}\n'
                            f'–†–µ–∑—É–ª—å—Ç–∞—Ç\: {result_build}\n'
                            f'–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å\: {duration}\n',
                            tracking_job,
                            True)
            # –£–±–∏—Ä–∞–µ–º –≤—Å–µ –∑–∞–∫–æ–Ω—á–µ–Ω–Ω—ã–µ –±–∏–ª–¥—ã –∏–∑ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã—Ö
            for untracking_job in untracking_builds:
                element = (f'{untracking_job}.'
                           f'{untracking_builds[untracking_job]}')
                CHECK_BUILD_LIST.pop(element)
        logger.info('–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞, –∑–∞–ø—É—â–µ–Ω–æ –æ–∂–∏–¥–∞–Ω–∏–µ –≤ %s —Å–µ–∫—É–Ω–¥',
                    TIMEOUT)
        sleep(TIMEOUT)
